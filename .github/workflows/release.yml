name: 构建和发布

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container:
      image: centos:7
    
    steps:
      - name: 安装基础工具
        run: |
          yum install -y epel-release
          yum install -y git make gcc rpm-build wget curl tar gzip

      - name: 安装 Go
        run: |
          curl -L https://go.dev/dl/go1.21.6.linux-amd64.tar.gz -o go.tar.gz
          tar -C /usr/local -xzf go.tar.gz
          echo "export PATH=$PATH:/usr/local/go/bin" >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: 安装 Node.js
        run: |
          curl -sL https://rpm.nodesource.com/setup_20.x | bash -
          yum install -y nodejs

      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ssl-web

      - name: 安装 nFPM
        run: |
          export PATH=$PATH:/usr/local/go/bin
          go install github.com/goreleaser/nfpm/v2/cmd/nfpm@latest
          export PATH=$PATH:$(go env GOPATH)/bin

      - name: 获取版本号
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: 生成发布说明
        id: release_notes
        run: |
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## 新版本发布 ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 新增" >> $GITHUB_OUTPUT
          echo "- 添加 GitHub Actions 自动化构建和发布流程" >> $GITHUB_OUTPUT
          echo "- 添加 DEB 和 RPM 包的自动构建" >> $GITHUB_OUTPUT
          echo "- 添加自动更新 CHANGELOG 功能" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### 优化" >> $GITHUB_OUTPUT
          echo "- 优化打包流程，修复目录结构问题" >> $GITHUB_OUTPUT
          echo "- 改进构建脚本的执行权限管理" >> $GITHUB_OUTPUT
          echo "- 优化 systemd 服务配置" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 构建项目
        run: |
          export PATH=$PATH:/usr/local/go/bin
          export CGO_ENABLED=0
          chmod +x build.sh
          ./build.sh

      - name: 创建打包目录
        run: |
          mkdir -p build
          cp ssl-chain-analyzer build/
          mkdir -p build/assets
          cp -r assets/web build/assets/
          chmod +x packaging/scripts/*.sh

      - name: 打包 CentOS 7 RPM
        run: |
          export PATH=$PATH:/usr/local/go/bin:$(go env GOPATH)/bin
          nfpm package --config packaging/nfpm.yaml --target build --packager rpm -p rpm.centos7

      - name: 打包 CentOS 8 RPM
        uses: addnab/docker-run-action@v3
        with:
          image: centos:8
          options: -v ${{ github.workspace }}:/work
          run: |
            cd /work
            dnf install -y epel-release
            dnf install -y rpm-build
            export PATH=$PATH:/usr/local/go/bin:$(go env GOPATH)/bin
            nfpm package --config packaging/nfpm.yaml --target build --packager rpm -p rpm.centos8

      - name: 打包 CentOS 9 RPM
        uses: addnab/docker-run-action@v3
        with:
          image: centos:9
          options: -v ${{ github.workspace }}:/work
          run: |
            cd /work
            dnf install -y epel-release
            dnf install -y rpm-build
            export PATH=$PATH:/usr/local/go/bin:$(go env GOPATH)/bin
            nfpm package --config packaging/nfpm.yaml --target build --packager rpm -p rpm.centos9

      - name: 打包 DEB
        run: |
          export PATH=$PATH:/usr/local/go/bin:$(go env GOPATH)/bin
          nfpm package --config packaging/nfpm.yaml --target build --packager deb

      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: ${{ steps.release_notes.outputs.NOTES }}
          files: |
            build/*.deb
            build/*.rpm
            ssl-chain-analyzer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 配置 Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 更新 CHANGELOG
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ steps.get_version.outputs.VERSION }}
          release-notes: ${{ steps.release_notes.outputs.NOTES }}

      - name: 提交 CHANGELOG
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ssl-web
          commit_message: "docs: 更新 CHANGELOG"
          file_pattern: CHANGELOG.md
          repository: .
